{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  // or automatically js to figure out\n  reducers: {\n    increment(state) {},\n    decrement() {},\n    toggle() {}\n  }\n});\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      // NEVER mutate the existing state. ALWAYS overwrite.\n      counter: state.counter + action.value,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - action.value,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","toggle","counterReducer","action","type","value","store"],"sources":["D:/github/udemy-courses/section20/redux_project/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\r\nimport {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialState = { counter: 0, showCounter: true }\r\n\r\ncreateSlice({\r\n  name: 'counter',\r\n  initialState: initialState, // or automatically js to figure out\r\n  reducers: {\r\n    increment(state) {},\r\n    decrement() {},\r\n    toggle() {},\r\n  }\r\n\r\n});\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === 'increment') {\r\n    return {\r\n      // NEVER mutate the existing state. ALWAYS overwrite.\r\n      counter: state.counter + action.value,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n\r\n  if (action.type === 'decrement') {\r\n    return {\r\n      counter: state.counter - action.value,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n\r\n  if (action.type === 'toggle') {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAAQC,WAAW,QAAO,kBAAkB;AAG5C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDH,WAAW,CAAC;EACVI,IAAI,EAAE,SAAS;EACfH,YAAY,EAAEA,YAAY;EAAE;EAC5BI,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE,CAAC,CAAC;IACnBC,SAASA,CAAA,EAAG,CAAC,CAAC;IACdC,MAAMA,CAAA,EAAG,CAAC;EACZ;AAEF,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAGA,CAACH,KAAK,GAAGN,YAAY,EAAEU,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACL;MACAV,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGS,MAAM,CAACE,KAAK;MACrCV,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLV,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGS,MAAM,CAACE,KAAK;MACrCV,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIQ,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLV,OAAO,EAAEK,KAAK,CAACL,OAAO;MACtBC,WAAW,EAAE,CAACI,KAAK,CAACJ;IACtB,CAAC;EACH;EAEA,OAAOI,KAAK;AACd,CAAC;AAED,MAAMO,KAAK,GAAGf,WAAW,CAACW,cAAc,CAAC;AAEzC,eAAeI,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}