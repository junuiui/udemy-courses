{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  // or automatically js to figure out\n  reducers: {\n    increment(state, action) {\n      state.counter += action.value;\n    },\n    decrement(state, action) {\n      state.counter -= action.value;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      // NEVER mutate the existing state. ALWAYS overwrite.\n      counter: state.counter + action.value,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - action.value,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","action","value","decrement","toggle","counterReducer","type","store"],"sources":["D:/github/udemy-courses/section20/redux_project/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\r\nimport {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialState = { counter: 0, showCounter: true }\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: initialState, // or automatically js to figure out\r\n  reducers: {\r\n    increment(state, action) {state.counter += action.value;},\r\n    decrement(state, action) {state.counter -= action.value;},\r\n    toggle(state) {state.showCounter = !state.showCounter},\r\n  }\r\n\r\n});\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === 'increment') {\r\n    return {\r\n      // NEVER mutate the existing state. ALWAYS overwrite.\r\n      counter: state.counter + action.value,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n\r\n  if (action.type === 'decrement') {\r\n    return {\r\n      counter: state.counter - action.value,\r\n      showCounter: state.showCounter\r\n    };\r\n  }\r\n\r\n  if (action.type === 'toggle') {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAAQC,WAAW,QAAO,kBAAkB;AAG5C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAAE;EAC5BK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAACD,KAAK,CAACN,OAAO,IAAIO,MAAM,CAACC,KAAK;IAAC,CAAC;IACzDC,SAASA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAACD,KAAK,CAACN,OAAO,IAAIO,MAAM,CAACC,KAAK;IAAC,CAAC;IACzDE,MAAMA,CAACJ,KAAK,EAAE;MAACA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAAA;EACvD;AAEF,CAAC,CAAC;AAEF,MAAMU,cAAc,GAAGA,CAACL,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EACvD,IAAIA,MAAM,CAACK,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACL;MACAZ,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,KAAK;MACrCP,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIM,MAAM,CAACK,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLZ,OAAO,EAAEM,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,KAAK;MACrCP,WAAW,EAAEK,KAAK,CAACL;IACrB,CAAC;EACH;EAEA,IAAIM,MAAM,CAACK,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLZ,OAAO,EAAEM,KAAK,CAACN,OAAO;MACtBC,WAAW,EAAE,CAACK,KAAK,CAACL;IACtB,CAAC;EACH;EAEA,OAAOK,KAAK;AACd,CAAC;AAED,MAAMO,KAAK,GAAGhB,WAAW,CAACc,cAAc,CAAC;AAEzC,eAAeE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}