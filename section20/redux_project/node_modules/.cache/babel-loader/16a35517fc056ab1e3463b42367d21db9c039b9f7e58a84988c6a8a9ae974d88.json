{"ast":null,"code":"// import { createStore,  } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  // or automatically js to figure out\n  reducers: {\n    increment(state, action) {\n      state.counter += action.value;\n    },\n    decrement(state, action) {\n      state.counter -= action.value;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// ===============\n// replaced by '@reduxjs/toolkit'\n// ===============\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === 'increment') {\n//     return {\n//       // NEVER mutate the existing state. ALWAYS overwrite.\n//       counter: state.counter + action.value,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'decrement') {\n//     return {\n//       counter: state.counter - action.value,\n//       showCounter: state.showCounter\n//     };\n//   }\n\n//   if (action.type === 'toggle') {\n//     return {\n//       counter: state.counter,\n//       showCounter: !state.showCounter\n//     };\n//   }\n\n//   return state;\n// };\n\ncounterSlice.action;\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","action","value","decrement","toggle","store","reducer"],"sources":["D:/github/udemy-courses/section20/redux_project/src/store/index.js"],"sourcesContent":["// import { createStore,  } from 'redux';\r\nimport { createSlice, configureStore } from '@reduxjs/toolkit'\r\n\r\n\r\nconst initialState = { counter: 0, showCounter: true }\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: initialState, // or automatically js to figure out\r\n  reducers: {\r\n    increment(state, action) { state.counter += action.value; },\r\n    decrement(state, action) { state.counter -= action.value; },\r\n    toggle(state) { state.showCounter = !state.showCounter },\r\n  }\r\n\r\n});\r\n\r\n// ===============\r\n// replaced by '@reduxjs/toolkit'\r\n// ===============\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === 'increment') {\r\n//     return {\r\n//       // NEVER mutate the existing state. ALWAYS overwrite.\r\n//       counter: state.counter + action.value,\r\n//       showCounter: state.showCounter\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === 'decrement') {\r\n//     return {\r\n//       counter: state.counter - action.value,\r\n//       showCounter: state.showCounter\r\n//     };\r\n//   }\r\n\r\n//   if (action.type === 'toggle') {\r\n//     return {\r\n//       counter: state.counter,\r\n//       showCounter: !state.showCounter\r\n//     };\r\n//   }\r\n\r\n//   return state;\r\n// };\r\n\r\ncounterSlice.action\r\n\r\nconst store = configureStore({\r\n  reducer: counterSlice.reducer,\r\n\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAG9D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAAE;EAC5BK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAAED,KAAK,CAACN,OAAO,IAAIO,MAAM,CAACC,KAAK;IAAE,CAAC;IAC3DC,SAASA,CAACH,KAAK,EAAEC,MAAM,EAAE;MAAED,KAAK,CAACN,OAAO,IAAIO,MAAM,CAACC,KAAK;IAAE,CAAC;IAC3DE,MAAMA,CAACJ,KAAK,EAAE;MAAEA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAAC;EACzD;AAEF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEAC,YAAY,CAACK,MAAM;AAEnB,MAAMI,KAAK,GAAGb,cAAc,CAAC;EAC3Bc,OAAO,EAAEV,YAAY,CAACU;AAExB,CAAC,CAAC;AAEF,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}